package constants

var HtmlTags = []string{
	"a",
	"abbr",
	"acronym",
	"address",
	"applet",
	"area",
	"article",
	"aside",
	"audio",
	"b",
	"base",
	"basefont",
	"bdi",
	"bdo",
	"bgsound",
	"big",
	"blink",
	"blockquote",
	"body",
	"br",
	"button",
	"canvas",
	"caption",
	"center",
	"cite",
	"code",
	"col",
	"colgroup",
	"command",
	"content",
	"contenteditable",
	"data",
	"datalist",
	"dd",
	"del",
	"details",
	"dfn",
	"dialog",
	"dir",
	"div",
	"dl",
	"dt",
	"em",
	"embed",
	"fieldset",
	"figcaption",
	"figure",
	"font",
	"footer",
	"form",
	"frame",
	"frameset",
	"h1",
	"h2",
	"h3",
	"h4",
	"h5",
	"h6",
	"head",
	"header",
	"hgroup",
	"hr",
	"html",
	"i",
	"iframe",
	"image",
	"img",
	"input",
	"ins",
	"kbd",
	"keygen",
	"label",
	"legend",
	"li",
	"link",
	"main",
	"map",
	"mark",
	"marquee",
	"math",
	"menu",
	"menuitem",
	"meta",
	"meter",
	"nav",
	"nobr",
	"noembed",
	"noframes",
	"noscript",
	"object",
	"ol",
	"optgroup",
	"option",
	"output",
	"p",
	"param",
	"picture",
	"plaintext",
	"portal",
	"pre",
	"progress",
	"q",
	"rb",
	"rp",
	"rt",
	"rtc",
	"ruby",
	"s",
	"samp",
	"script",
	"section",
	"select",
	"shadow",
	"slot",
	"small",
	"source",
	"spacer",
	"span",
	"strike",
	"strong",
	"style",
	"sub",
	"summary",
	"sup",
	"svg",
	"table",
	"tbody",
	"td",
	"template",
	"textarea",
	"tfoot",
	"th",
	"thead",
	"time",
	"title",
	"tr",
	"track",
	"tt",
	"u",
	"ul",
	"var",
	"video",
	"wbr",
	"xmp",
}

var HtmlTagsWithAttributes = map[string][]string{
	"*": {
		"accesskey", "autocapitalize", "class", "contenteditable", "contextmenu", "data-*", "dir", "draggable",
		"hidden", "id", "itemprop", "lang", "role", "slot", "spellcheck", "style", "tabindex", "title", "translate",
	},
	"a": {
		"download", "href", "hreflang", "media", "ping", "referrerpolicy", "rel", "shape", "target",
	},
	"abbr":    {},
	"acronym": {},
	"address": {},
	"applet": {
		"align", "alt", "code", "codebase",
	},
	"area": {
		"alt", "coords", "download", "href", "hreflang", "media", "ping", "referrerpolicy", "rel", "shape", "target",
	},
	"article": {},
	"aside":   {},
	"audio": {
		"autoplay", "buffered", "controls", "crossorigin", "loop", "muted", "preload", "src",
	},
	"b": {},
	"base": {
		"href", "target",
	},
	"basefont": {
		"color",
	},
	"bdi": {},
	"bdo": {},
	"bgsound": {
		"loop",
	},
	"big":   {},
	"blink": {},
	"blockquote": {
		"cite",
	},
	"body": {
		"background", "bgcolor",
	},
	"br": {},
	"button": {
		"autofocus", "disabled", "form", "formaction", "formenctype", "formmethod", "formnovalidate", "formtarget",
		"name", "type", "value",
	},
	"canvas": {
		"height", "width",
	},
	"caption": {
		"align",
	},
	"center": {},
	"cite":   {},
	"code":   {},
	"col": {
		"align", "bgcolor", "span",
	},
	"colgroup": {
		"align", "bgcolor", "span",
	},
	"command": {
		"checked", "disabled", "icon", "radiogroup", "type",
	},
	"content": {},
	"contenteditable": {
		"enterkeyhint", "inputmode",
	},
	"data": {
		"value",
	},
	"datalist": {},
	"dd":       {},
	"del": {
		"cite", "datetime",
	},
	"details": {
		"open",
	},
	"dfn": {},
	"dialog": {
		"open",
	},
	"dir": {},
	"div": {},
	"dl":  {},
	"dt":  {},
	"em":  {},
	"embed": {
		"height", "src", "type", "width",
	},
	"fieldset": {
		"disabled", "form", "name",
	},
	"figcaption": {},
	"figure":     {},
	"font": {
		"color",
	},
	"footer": {},
	"form": {
		"accept", "accept-charset", "action", "autocomplete", "enctype", "method", "name", "novalidate", "target",
	},
	"frame":    {},
	"frameset": {},
	"h1":       {},
	"h2":       {},
	"h3":       {},
	"h4":       {},
	"h5":       {},
	"h6":       {},
	"head":     {},
	"header":   {},
	"hgroup":   {},
	"hr": {
		"align", "color",
	},
	"html": {
		"manifest",
	},
	"i": {},
	"iframe": {
		"align", "allow", "csp", "height", "importance", "loading", "name", "referrerpolicy", "sandbox", "src",
		"srcdoc", "width",
	},
	"image": {},
	"img": {
		"align", "alt", "border", "crossorigin", "decoding", "height", "importance", "intrinsicsize", "ismap",
		"loading", "referrerpolicy", "sizes", "src", "srcset", "usemap", "width",
	},
	"input": {
		"accept", "alt", "autocomplete", "autofocus", "capture", "checked", "dirname", "disabled", "form",
		"formaction", "formenctype", "formmethod", "formnovalidate", "formtarget", "height", "list", "max",
		"maxlength", "minlength", "min", "multiple", "name", "pattern", "placeholder", "readonly", "required",
		"size", "src", "step", "type", "usemap", "value", "width",
	},
	"ins": {
		"cite", "datetime",
	},
	"kbd": {},
	"keygen": {
		"autofocus", "challenge", "disabled", "form", "keytype", "name",
	},
	"label": {
		"for", "form",
	},
	"legend": {},
	"li": {
		"value",
	},
	"link": {
		"crossorigin", "href", "hreflang", "importance", "integrity", "media", "referrerpolicy", "rel", "sizes",
		"type",
	},
	"main": {},
	"map": {
		"name",
	},
	"mark": {},
	"marquee": {
		"bgcolor", "loop",
	},
	"math": {},
	"menu": {
		"type",
	},
	"menuitem": {},
	"meta": {
		"charset", "content", "http-equiv", "name",
	},
	"meter": {
		"form", "high", "low", "max", "min", "optimum", "value",
	},
	"nav":      {},
	"nobr":     {},
	"noembed":  {},
	"noframes": {},
	"noscript": {},
	"object": {
		"border", "data", "form", "height", "name", "type", "usemap", "width",
	},
	"ol": {
		"reversed", "start",
	},
	"optgroup": {
		"disabled", "label",
	},
	"option": {
		"disabled", "label", "selected", "value",
	},
	"output": {
		"for", "form", "name",
	},
	"p": {},
	"param": {
		"name", "value",
	},
	"picture":   {},
	"plaintext": {},
	"portal":    {},
	"pre":       {},
	"progress": {
		"form", "max", "value",
	},
	"q": {
		"cite",
	},
	"rb":   {},
	"rp":   {},
	"rt":   {},
	"rtc":  {},
	"ruby": {},
	"s":    {},
	"samp": {},
	"script": {
		"async", "charset", "crossorigin", "defer", "importance", "integrity", "language", "referrerpolicy",
		"src", "type",
	},
	"section": {},
	"select": {
		"autocomplete", "autofocus", "disabled", "form", "multiple", "name", "required", "size",
	},
	"shadow": {},
	"slot":   {},
	"small":  {},
	"source": {
		"media", "sizes", "src", "srcset", "type",
	},
	"spacer": {},
	"span":   {},
	"strike": {},
	"strong": {},
	"style": {
		"media", "scoped", "type",
	},
	"sub":     {},
	"summary": {},
	"sup":     {},
	"svg":     {},
	"table": {
		"align", "background", "bgcolor", "border", "summary",
	},
	"tbody": {
		"align", "bgcolor",
	},
	"td": {
		"align", "background", "bgcolor", "colspan", "headers", "rowspan",
	},
	"template": {},
	"textarea": {
		"autocomplete", "autofocus", "cols", "dirname", "disabled", "enterkeyhint", "form", "inputmode",
		"maxlength", "minlength", "name", "placeholder", "readonly", "required", "rows", "wrap",
	},
	"tfoot": {
		"align", "bgcolor",
	},
	"th": {
		"align", "background", "bgcolor", "colspan", "headers", "rowspan", "scope",
	},
	"thead": {
		"align",
	},
	"time": {
		"datetime",
	},
	"title": {},
	"tr": {
		"align", "bgcolor",
	},
	"track": {
		"default", "kind", "label", "src", "srclang",
	},
	"tt":  {},
	"u":   {},
	"ul":  {},
	"var": {},
	"video": {
		"autoplay", "buffered", "controls", "crossorigin", "height", "loop", "muted", "poster", "preload", "src",
		"width",
	},
	"wbr": {},
	"xmp": {},
}

type AttributeInfo struct {
	Key         string
	Label       string
	Description string
}

var HtmxAttributes = map[string]AttributeInfo{
	"hx-confirm": {
		Key:         "hx-confirm",
		Label:       "Confirm",
		Description: "shows a confirm() dialog before issuing a request",
	},
	"hx-delete": {
		Key:         "hx-delete",
		Label:       "Delete",
		Description: "issues a DELETE to the specified URL",
	},
	"hx-disable": {
		Key:         "hx-disable",
		Label:       "Disable",
		Description: "disables htmx processing for the given node and any children nodes",
	},
	"hx-disabled-elt": {
		Key:         "hx-disabled-elt",
		Label:       "Disabled Element",
		Description: "adds the disabled attribute to the specified elements while a request is in flight",
	},
	"hx-disinherit": {
		Key:         "hx-disinherit",
		Label:       "Disinherit",
		Description: "control and disable automatic attribute inheritance for child nodes",
	},
	"hx-encoding": {
		Key:         "hx-encoding",
		Label:       "Encoding",
		Description: "changes the request encoding type",
	},
	"hx-ext": {
		Key:         "hx-ext",
		Label:       "Extension",
		Description: "extensions to use for this element",
	},
	"hx-headers": {
		Key:         "hx-headers",
		Label:       "Headers",
		Description: "adds to the headers that will be submitted with the request",
	},
	"hx-history": {
		Key:         "hx-history",
		Label:       "History",
		Description: "prevent sensitive data being saved to the history cache",
	},
	"hx-history-elt": {
		Key:         "hx-history-elt",
		Label:       "History Element",
		Description: "the element to snapshot and restore during history navigation",
	},
	"hx-include": {
		Key:         "hx-include",
		Label:       "Include",
		Description: "include additional data in requests",
	},
	"hx-indicator": {
		Key:         "hx-indicator",
		Label:       "Indicator",
		Description: "the element to put the htmx-request class on during the request",
	},
	"hx-params": {
		Key:         "hx-params",
		Label:       "Params",
		Description: "filters the parameters that will be submitted with a request",
	},
	"hx-patch": {
		Key:         "hx-patch",
		Label:       "Patch",
		Description: "issues a PATCH to the specified URL",
	},
	"hx-preserve": {
		Key:         "hx-preserve",
		Label:       "Preserve",
		Description: "specifies elements to keep unchanged between requests",
	},
	"hx-prompt": {
		Key:         "hx-prompt",
		Label:       "Prompt",
		Description: "shows a prompt() before submitting a request",
	},
	"hx-put": {
		Key:         "hx-put",
		Label:       "Put",
		Description: "issues a PUT to the specified URL",
	},
	"hx-replace-url": {
		Key:         "hx-replace-url",
		Label:       "Replace URL",
		Description: "replace the URL in the browser location bar",
	},
	"hx-request": {
		Key:         "hx-request",
		Label:       "Request",
		Description: "configures various aspects of the request",
	},
	"hx-sse": {
		Key:         "hx-sse",
		Label:       "SSE",
		Description: "has been moved to an extension. Documentation for older versions",
	},
	"hx-sync": {
		Key:         "hx-sync",
		Label:       "Sync",
		Description: "control how requests made by different elements are synchronized",
	},
	"hx-validate": {
		Key:         "hx-validate",
		Label:       "Validate",
		Description: "force elements to validate themselves before a request",
	},
	"hx-vars": {
		Key:         "hx-vars",
		Label:       "Vars",
		Description: "adds values dynamically to the parameters to submit with the request (deprecated, please use hx-vals)",
	},
	"hx-ws": {
		Key:         "hx-ws",
		Label:       "WebSocket",
		Description: "has been moved to an extension. Documentation for older versions",
	},
	"hx-boost": {
		Key:         "hx-boost",
		Label:       "Boost",
		Description: "add or remove progressive enhancement for links and forms",
	},
	"hx-get": {
		Key:         "hx-get",
		Label:       "GET",
		Description: "issues a GET to the specified URL",
	},
	"hx-post": {
		Key:         "hx-post",
		Label:       "POST",
		Description: "issues a POST to the specified URL",
	},
	"hx-on*": {
		Key:         "hx-on*",
		Label:       "On*",
		Description: "handle events with inline scripts on elements",
	},
	"hx-push-url": {
		Key:         "hx-push-url",
		Label:       "Push URL",
		Description: "pushes the URL into the browser location bar, creating a new history entry",
	},
	"hx-select": {
		Key:         "hx-select",
		Label:       "Select",
		Description: "select content to swap in from a response",
	},
	"hx-select-oob": {
		Key:         "hx-select-oob",
		Label:       "Select Out of Band",
		Description: "select content to swap in from a response, out of band (somewhere other than the target)",
	},
	"hx-swap": {
		Key:         "hx-swap",
		Label:       "Swap",
		Description: "controls how content is swapped in (outerHTML, beforeend, afterend, …)",
	},
	"hx-swap-oob": {
		Key:         "hx-swap-oob",
		Label:       "Swap Out of Band",
		Description: "marks content in a response to be out of band (should swap in somewhere other than the target)",
	},
	"hx-target": {
		Key:         "hx-target",
		Label:       "Target",
		Description: "specifies the target element to be swapped",
	},
	"hx-trigger": {
		Key:         "hx-trigger",
		Label:       "Trigger",
		Description: "specifies the event that triggers the request",
	},
	"hx-vals": {
		Key:         "hx-vals",
		Label:       "Values",
		Description: "adds values to the parameters to submit with the request (JSON-formatted)",
	},
}
